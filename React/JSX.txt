JSX 에서 쓰이는 div태그는 DOM요소가 아니고 React 요소이다 
    React Dom 을 구성하는 것은 리액트 요소이고 Dom 을 구성하는 것은 DOM요소이다

    확장에가서 Reac snipet을 다운하면 
    rfce 를 입력하면 틀를 쉽게 만들어준다 

   import React from 'react'

    function main() {
      return (
    <div>main</div>
     ) 
    }

    export default main

    Props의 개요 

    props란 무엇인가 

    컴포넌의 끼리의 정보교환 방식 
    1.props는 반드시 위에서 아래방향으로 흐른다 
    [부모]->[자식1] O /  [자식1]->[부모] X / [자식1] -> [자식2] X

    2. props는 반드시 읽기 전용으로 취급하며, 변경하지 않는다 

    간단한 사용방법 

    
    import React from 'react'

2. 정보를 사용하는 법
function Son(props) {
    console.log('props ', props)
    return <div>나는 {props.motherNam}아들</div>
}

1.  부모 => 자식 정보를 전달했다
function Mother() {
    const name = '지훈';
    return <Son motherName={name} />
    // 부모컴포넌트에서 자식컴포넌트로 어떤한 데이터를 전달했다 
}

function main() {
    return (
        <div>
            <Mother />
        </div>
    )
}

export default main


 사이가 먼 컴포넌트에 props를 정보를 줄려고 할때 데이터를 전달해주기 위한 용도로만 
쓰이는 컴포넌트가 생기게 된다  props가 사이가 먼 컴포넌트에 가기 까지 계속 드릴 하면서
드릴 처럼 계속 내려오는 현상을 props drilling 이라 한다 

[부모]=>[자식]=>[그 자식]=>[그 자식의 자식]=>이 테이터를 받기 위해 무려 3번이나
데이터를 내려줘야한다 이걸 바로 props drilling 이라 한다 

 props drilling이 만약 60개 가 되면 중간에 오류가 나면 찾기가 힘들다 
 유지 보수측면에서 너무 어렵게 떄문에 이런 문제를 해결하기 위해 
 전역상태관리자 리듀스가 등장합니다 